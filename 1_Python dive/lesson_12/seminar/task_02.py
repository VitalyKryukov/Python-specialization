# üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä.
# üìå –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–µ–Ω –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç start –¥–æ stop —Å —à–∞–≥–æ–º step.
# üìå –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, —Å—á–∏—Ç–∞–µ–º step=1.
# üìå –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä, —Ç–∞–∫–∂–µ —Å—á–∏—Ç–∞–µ–º start=1.

class Factorial:
    def __init__(self, *args):
        data = args[:3]
        self.start, self.step = 1, 1
        if len(data) == 1:
            self.stop = data[0]
        elif len(data) == 2:
            self.start, self.stop = data
        else:
            self.start, self.stop, self.step = data
        self.data = [*range(self.start, self.stop + 1, self.step)]
        self.value = 1

    def _get_fact(self, limit):
        fact = 1
        for i in range(1, limit + 1):
            fact *= i
        self.value = fact
        return fact

    def __iter__(self):
        return self

    def __next__(self):
        if self.data:
            return self._get_fact(self.data.pop(0))
        raise StopIteration

    def __str__(self):
        return str(self.value)


if __name__ == '__main__':
    factorial_gen = Factorial(5, 10, 3)
    for i in factorial_gen:
        print(i)
